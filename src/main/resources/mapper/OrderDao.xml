<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.financial_system.dao.OrderDao">

    <resultMap type="com.example.financial_system.entity.Order" id="OrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="user" column="user" jdbcType="INTEGER"/>
        <result property="repository" column="repository" jdbcType="INTEGER"/>
        <result property="count" column="count" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="amount" column="amount" jdbcType="NUMERIC"/>
        <result property="operator" column="operator" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BOOLEAN"/>
    </resultMap>
    
    <sql id="base_column_list">
        id, user, repository, count, price, amount, operator, create_time, is_delete    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderMap">
        select
        <include refid="base_column_list" />
        
        from financial_system.order
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderMap">
        select
        <include refid="base_column_list" />

        from financial_system.order
        limit #{offset}, #{limit}
    </select>

    <!--查询所有-->
    <select id="queryAll" resultMap="OrderMap">
        select
        <include refid="base_column_list" />

        from financial_system.order

    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into financial_system.order(user, repository, count, price, amount, operator, create_time, is_delete)
        values (#{user}, #{repository}, #{count}, #{price}, #{amount}, #{operator}, #{createTime}, #{isDelete})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update financial_system.order
        <set>
            <if test="user != null">
                user = #{user},
            </if>
            <if test="repository != null">
                repository = #{repository},
            </if>
            <if test="count != null">
                count = #{count},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="operator != null">
                operator = #{operator},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from financial_system.order where id = #{id}
    </delete>
    
    <!--选择性的新增列-->
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true">
        insert into financial_system.order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user != null">
                user,
            </if>
            <if test="repository != null">
                repository,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="user != null">
                #{user},
            </if>
            <if test="repository != null">
                #{repository},
            </if>
            <if test="count != null">
                #{count},
            </if>
            <if test="price != null">
                #{price},
            </if>
            <if test="amount != null">
                #{amount},
            </if>
            <if test="operator != null">
                #{operator},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="isDelete != null">
                #{isDelete},
            </if>
        </trim>        
    </insert>

</mapper>